// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.0
// source: approximationservice.proto

package approx

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CurveFitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XData       []float32     `protobuf:"fixed32,1,rep,packed,name=x_data,json=xData,proto3" json:"x_data,omitempty"`
	YData       []float32     `protobuf:"fixed32,2,rep,packed,name=y_data,json=yData,proto3" json:"y_data,omitempty"`
	Expressions []*Expression `protobuf:"bytes,3,rep,name=expressions,proto3" json:"expressions,omitempty"`
}

func (x *CurveFitRequest) Reset() {
	*x = CurveFitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approximationservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurveFitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurveFitRequest) ProtoMessage() {}

func (x *CurveFitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_approximationservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurveFitRequest.ProtoReflect.Descriptor instead.
func (*CurveFitRequest) Descriptor() ([]byte, []int) {
	return file_approximationservice_proto_rawDescGZIP(), []int{0}
}

func (x *CurveFitRequest) GetXData() []float32 {
	if x != nil {
		return x.XData
	}
	return nil
}

func (x *CurveFitRequest) GetYData() []float32 {
	if x != nil {
		return x.YData
	}
	return nil
}

func (x *CurveFitRequest) GetExpressions() []*Expression {
	if x != nil {
		return x.Expressions
	}
	return nil
}

type CurveFitResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FitResult []*FitResult `protobuf:"bytes,1,rep,name=fit_result,json=fitResult,proto3" json:"fit_result,omitempty"`
}

func (x *CurveFitResult) Reset() {
	*x = CurveFitResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approximationservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurveFitResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurveFitResult) ProtoMessage() {}

func (x *CurveFitResult) ProtoReflect() protoreflect.Message {
	mi := &file_approximationservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurveFitResult.ProtoReflect.Descriptor instead.
func (*CurveFitResult) Descriptor() ([]byte, []int) {
	return file_approximationservice_proto_rawDescGZIP(), []int{1}
}

func (x *CurveFitResult) GetFitResult() []*FitResult {
	if x != nil {
		return x.FitResult
	}
	return nil
}

type Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value  float32 `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	Stderr float32 `protobuf:"fixed32,3,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *Parameter) Reset() {
	*x = Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approximationservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter) ProtoMessage() {}

func (x *Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_approximationservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter.ProtoReflect.Descriptor instead.
func (*Parameter) Descriptor() ([]byte, []int) {
	return file_approximationservice_proto_rawDescGZIP(), []int{2}
}

func (x *Parameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Parameter) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Parameter) GetStderr() float32 {
	if x != nil {
		return x.Stderr
	}
	return 0
}

type FitResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId         uint32       `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	SuccessStatus   bool         `protobuf:"varint,2,opt,name=success_status,json=successStatus,proto3" json:"success_status,omitempty"`
	ModelName       string       `protobuf:"bytes,3,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	ModelExpression string       `protobuf:"bytes,4,opt,name=model_expression,json=modelExpression,proto3" json:"model_expression,omitempty"`
	LexExpression   string       `protobuf:"bytes,5,opt,name=lex_expression,json=lexExpression,proto3" json:"lex_expression,omitempty"`
	RSqrt           float32      `protobuf:"fixed32,6,opt,name=r_sqrt,json=rSqrt,proto3" json:"r_sqrt,omitempty"`
	Aic             float32      `protobuf:"fixed32,7,opt,name=aic,proto3" json:"aic,omitempty"`
	Bic             float32      `protobuf:"fixed32,8,opt,name=bic,proto3" json:"bic,omitempty"`
	Fog             uint32       `protobuf:"varint,9,opt,name=fog,proto3" json:"fog,omitempty"`
	MeanOfX         float32      `protobuf:"fixed32,10,opt,name=mean_of_x,json=meanOfX,proto3" json:"mean_of_x,omitempty"`
	MeanOfY         float32      `protobuf:"fixed32,11,opt,name=mean_of_y,json=meanOfY,proto3" json:"mean_of_y,omitempty"`
	ChiSqrt         float32      `protobuf:"fixed32,12,opt,name=chi_sqrt,json=chiSqrt,proto3" json:"chi_sqrt,omitempty"`
	ReducedChiSqrt  float32      `protobuf:"fixed32,13,opt,name=reduced_chi_sqrt,json=reducedChiSqrt,proto3" json:"reduced_chi_sqrt,omitempty"`
	DataPoints      float32      `protobuf:"fixed32,14,opt,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	FittingMethod   string       `protobuf:"bytes,15,opt,name=fitting_method,json=fittingMethod,proto3" json:"fitting_method,omitempty"`
	Parameters      []*Parameter `protobuf:"bytes,16,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *FitResult) Reset() {
	*x = FitResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approximationservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FitResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FitResult) ProtoMessage() {}

func (x *FitResult) ProtoReflect() protoreflect.Message {
	mi := &file_approximationservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FitResult.ProtoReflect.Descriptor instead.
func (*FitResult) Descriptor() ([]byte, []int) {
	return file_approximationservice_proto_rawDescGZIP(), []int{3}
}

func (x *FitResult) GetModelId() uint32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *FitResult) GetSuccessStatus() bool {
	if x != nil {
		return x.SuccessStatus
	}
	return false
}

func (x *FitResult) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *FitResult) GetModelExpression() string {
	if x != nil {
		return x.ModelExpression
	}
	return ""
}

func (x *FitResult) GetLexExpression() string {
	if x != nil {
		return x.LexExpression
	}
	return ""
}

func (x *FitResult) GetRSqrt() float32 {
	if x != nil {
		return x.RSqrt
	}
	return 0
}

func (x *FitResult) GetAic() float32 {
	if x != nil {
		return x.Aic
	}
	return 0
}

func (x *FitResult) GetBic() float32 {
	if x != nil {
		return x.Bic
	}
	return 0
}

func (x *FitResult) GetFog() uint32 {
	if x != nil {
		return x.Fog
	}
	return 0
}

func (x *FitResult) GetMeanOfX() float32 {
	if x != nil {
		return x.MeanOfX
	}
	return 0
}

func (x *FitResult) GetMeanOfY() float32 {
	if x != nil {
		return x.MeanOfY
	}
	return 0
}

func (x *FitResult) GetChiSqrt() float32 {
	if x != nil {
		return x.ChiSqrt
	}
	return 0
}

func (x *FitResult) GetReducedChiSqrt() float32 {
	if x != nil {
		return x.ReducedChiSqrt
	}
	return 0
}

func (x *FitResult) GetDataPoints() float32 {
	if x != nil {
		return x.DataPoints
	}
	return 0
}

func (x *FitResult) GetFittingMethod() string {
	if x != nil {
		return x.FittingMethod
	}
	return ""
}

func (x *FitResult) GetParameters() []*Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type RequestExpressionParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParamName  string  `protobuf:"bytes,1,opt,name=paramName,proto3" json:"paramName,omitempty"`
	ParamValue float32 `protobuf:"fixed32,2,opt,name=paramValue,proto3" json:"paramValue,omitempty"`
	MinBound   float32 `protobuf:"fixed32,3,opt,name=minBound,proto3" json:"minBound,omitempty"`
	MaxBound   float32 `protobuf:"fixed32,4,opt,name=maxBound,proto3" json:"maxBound,omitempty"`
}

func (x *RequestExpressionParameter) Reset() {
	*x = RequestExpressionParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approximationservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestExpressionParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestExpressionParameter) ProtoMessage() {}

func (x *RequestExpressionParameter) ProtoReflect() protoreflect.Message {
	mi := &file_approximationservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestExpressionParameter.ProtoReflect.Descriptor instead.
func (*RequestExpressionParameter) Descriptor() ([]byte, []int) {
	return file_approximationservice_proto_rawDescGZIP(), []int{4}
}

func (x *RequestExpressionParameter) GetParamName() string {
	if x != nil {
		return x.ParamName
	}
	return ""
}

func (x *RequestExpressionParameter) GetParamValue() float32 {
	if x != nil {
		return x.ParamValue
	}
	return 0
}

func (x *RequestExpressionParameter) GetMinBound() float32 {
	if x != nil {
		return x.MinBound
	}
	return 0
}

func (x *RequestExpressionParameter) GetMaxBound() float32 {
	if x != nil {
		return x.MaxBound
	}
	return 0
}

type Expression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Expression    string                        `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
	LexExpression string                        `protobuf:"bytes,4,opt,name=lex_expression,json=lexExpression,proto3" json:"lex_expression,omitempty"`
	Parameters    []*RequestExpressionParameter `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *Expression) Reset() {
	*x = Expression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approximationservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expression) ProtoMessage() {}

func (x *Expression) ProtoReflect() protoreflect.Message {
	mi := &file_approximationservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expression.ProtoReflect.Descriptor instead.
func (*Expression) Descriptor() ([]byte, []int) {
	return file_approximationservice_proto_rawDescGZIP(), []int{5}
}

func (x *Expression) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Expression) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Expression) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *Expression) GetLexExpression() string {
	if x != nil {
		return x.LexExpression
	}
	return ""
}

func (x *Expression) GetParameters() []*RequestExpressionParameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

var File_approximationservice_proto protoreflect.FileDescriptor

var file_approximationservice_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x22, 0x75, 0x0a, 0x0f, 0x43, 0x75, 0x72, 0x76, 0x65, 0x46, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x78, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x05, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15,
	0x0a, 0x06, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x05,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x42, 0x0a, 0x0e, 0x43,
	0x75, 0x72, 0x76, 0x65, 0x46, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a,
	0x0a, 0x66, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x09, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x4d, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x22, 0x83,
	0x04, 0x0a, 0x09, 0x46, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x78, 0x5f,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x65, 0x78, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x0a, 0x06, 0x72, 0x5f, 0x73, 0x71, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x72, 0x53, 0x71, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x63, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x61, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x63, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x62, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x6f,
	0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66, 0x6f, 0x67, 0x12, 0x1a, 0x0a, 0x09,
	0x6d, 0x65, 0x61, 0x6e, 0x5f, 0x6f, 0x66, 0x5f, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x6d, 0x65, 0x61, 0x6e, 0x4f, 0x66, 0x58, 0x12, 0x1a, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x6e,
	0x5f, 0x6f, 0x66, 0x5f, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x65, 0x61,
	0x6e, 0x4f, 0x66, 0x59, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x5f, 0x73, 0x71, 0x72, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x63, 0x68, 0x69, 0x53, 0x71, 0x72, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x69, 0x5f, 0x73,
	0x71, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x64, 0x43, 0x68, 0x69, 0x53, 0x71, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x31, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x61, 0x78, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x0a, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x6c, 0x65, 0x78, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x78, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x32, 0x56, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x78, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3e, 0x0a, 0x09, 0x46, 0x69, 0x74, 0x43, 0x75, 0x72, 0x76, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x76, 0x65, 0x46, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43,
	0x75, 0x72, 0x76, 0x65, 0x46, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_approximationservice_proto_rawDescOnce sync.Once
	file_approximationservice_proto_rawDescData = file_approximationservice_proto_rawDesc
)

func file_approximationservice_proto_rawDescGZIP() []byte {
	file_approximationservice_proto_rawDescOnce.Do(func() {
		file_approximationservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_approximationservice_proto_rawDescData)
	})
	return file_approximationservice_proto_rawDescData
}

var file_approximationservice_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_approximationservice_proto_goTypes = []interface{}{
	(*CurveFitRequest)(nil),            // 0: protos.CurveFitRequest
	(*CurveFitResult)(nil),             // 1: protos.CurveFitResult
	(*Parameter)(nil),                  // 2: protos.Parameter
	(*FitResult)(nil),                  // 3: protos.FitResult
	(*RequestExpressionParameter)(nil), // 4: protos.RequestExpressionParameter
	(*Expression)(nil),                 // 5: protos.Expression
}
var file_approximationservice_proto_depIdxs = []int32{
	5, // 0: protos.CurveFitRequest.expressions:type_name -> protos.Expression
	3, // 1: protos.CurveFitResult.fit_result:type_name -> protos.FitResult
	2, // 2: protos.FitResult.parameters:type_name -> protos.Parameter
	4, // 3: protos.Expression.parameters:type_name -> protos.RequestExpressionParameter
	0, // 4: protos.ApproximationService.FitCurves:input_type -> protos.CurveFitRequest
	1, // 5: protos.ApproximationService.FitCurves:output_type -> protos.CurveFitResult
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_approximationservice_proto_init() }
func file_approximationservice_proto_init() {
	if File_approximationservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_approximationservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurveFitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approximationservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurveFitResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approximationservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approximationservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FitResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approximationservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestExpressionParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approximationservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Expression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_approximationservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_approximationservice_proto_goTypes,
		DependencyIndexes: file_approximationservice_proto_depIdxs,
		MessageInfos:      file_approximationservice_proto_msgTypes,
	}.Build()
	File_approximationservice_proto = out.File
	file_approximationservice_proto_rawDesc = nil
	file_approximationservice_proto_goTypes = nil
	file_approximationservice_proto_depIdxs = nil
}
